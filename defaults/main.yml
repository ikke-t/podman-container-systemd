---

# state can be running or absent
container_state: running

# SystemD restart policy
# see man systemd.service for info
# by default we want to restart failed container
container_restart: on-failure
service_files_dir: /usr/local/lib/systemd/system
systemd_scope: system
systemd_TimeoutStartSec: 15
systemd_RestartSec: 30
systemd_tempdir: "{{ '/tmp' if ansible_os_family == 'RedHat' and
  ansible_distribution_major_version|int == 7 else '%T' }}"
container_run_as_user: root
container_run_as_group: root
container_stop_timeout: 15

# SystemD dependencies (some are hardcoded; see templates)
systemd_After: [network.target]
systemd_Before: []
systemd_Conflicts: []
systemd_RequiredBy: []
systemd_Requires: []
systemd_WantedBy: []
systemd_Wants: []

# systemd service name
service_name: "{{ container_name }}-container-pod-{{ container_run_as_user }}.service"

# to sepped up you can disable always checking if podman is installed.
skip_podman_install: true

podman_dependencies_rootless:
  - fuse-overlayfs
  - slirp4netns
  - uidmap

# pod yaml deploy
container_pod_yaml_deploy: false
container_pod_yaml_template: templates/container-pod-yaml.j2
container_pod_yaml_template_validation: false